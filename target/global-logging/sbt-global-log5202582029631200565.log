[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\coreu\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\coreu\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (Oracle Corporation Java 21.0.1)
[debug] Load.defaultLoad until apply took 103.2945ms
[debug]                 Load.loadUnit: plugins took 79.4122ms
[debug]                 Load.loadUnit: defsScala took 0.44ms
[debug] [Loading] Scanning directory C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.5661 ms
[debug]                     Load.resolveProject(se_kitty_card-build-build) took 46.3781ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id se_kitty_card-build-build, base: C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project\project, plugins: List(<none>))) took 85.1784ms
[debug] [Loading] Done in C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project\project, returning: (se_kitty_card-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 108.8112ms
[debug]                 Load.loadUnit: cleanEvalClasses took 0.265099ms
[debug]               Load.loadUnit(file:/C:/Users/coreu/Documents/%23Studium/Software%20Engineering/SE_Kitty_Card/project/project/, ...) took 197.9178ms
[debug]             Load.apply: load took 353.7227ms
[debug]             Load.apply: resolveProjects took 5.3684ms
[debug]             Load.apply: finalTransforms took 83.2759ms
[debug]             Load.apply: config.delegates took 6.623ms
[debug]             Load.apply: Def.make(settings)... took 395.270901ms
[debug]             Load.apply: structureIndex took 105.7215ms
[debug]             Load.apply: mkStreams took 1.7093ms
[info] loading project definition from C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 1586.1876ms
[debug]           Load.loadUnit: defsScala took 0.003801ms
[debug] [Loading] Scanning directory C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project
[debug]             Load.loadUnit: mkEval took 3.433899ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3476 ms
[info] loading settings for project se_kitty_card-build from idea.sbt ...
[debug]               Load.resolveProject(se_kitty_card-build) took 3.1632ms
[debug]             Load.loadTransitive: finalizeProject(Project(id se_kitty_card-build, base: C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project, plugins: List(<none>))) took 6.1029ms
[debug] [Loading] Done in C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project, returning: (se_kitty_card-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1773.9858ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.929899ms
[debug]         Load.loadUnit(file:/C:/Users/coreu/Documents/%23Studium/Software%20Engineering/SE_Kitty_Card/project/, ...) took 3370.3021ms
[debug]       Load.apply: load took 3372.553899ms
[debug]       Load.apply: resolveProjects took 0.132501ms
[debug]       Load.apply: finalTransforms took 10.6414ms
[debug]       Load.apply: config.delegates took 0.445399ms
[debug]       Load.apply: Def.make(settings)... took 127.4505ms
[debug]       Load.apply: structureIndex took 33.646601ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\coreu\Documents\#Studium\Software Engineering\SE_Kitty_Card\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Canceling execution...
[error] Cancelled: loadp
[error] Cancelled: loadp
[error] Use 'last' for the full log.
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
