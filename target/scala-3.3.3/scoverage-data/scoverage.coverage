# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
112
139
7
apply
Apply
false
0
false
sys.props("line.separator")

1
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
112
121
7
props
Select
false
0
false
sys.props

2
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHeading
216
298
10
println
Apply
false
0
false
println(Console.MAGENTA + "Welcome to the Kitty Card Game!" + Console.RESET + eol)

3
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHeading
224
297
10
+
Apply
false
0
false
Console.MAGENTA + "Welcome to the Kitty Card Game!" + Console.RESET + eol

4
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHeading
224
291
10
+
Apply
false
0
false
Console.MAGENTA + "Welcome to the Kitty Card Game!" + Console.RESET

5
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHeading
224
275
10
+
Apply
false
0
false
Console.MAGENTA + "Welcome to the Kitty Card Game!"

6
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHeading
224
239
10
MAGENTA
Select
false
0
false
Console.MAGENTA

7
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHeading
278
291
10
RESET
Select
false
0
false
Console.RESET

8
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHeading
176
192
9
printHeading
DefDef
false
0
false
def printHeading

9
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
429
445
14
+
Apply
false
0
false
color + " ∧,,,∧"

10
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
476
512
15
+
Apply
false
0
false
s"( ̳• · •̳) " + brightWhite + value

11
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
476
504
15
+
Apply
false
0
false
s"( ̳• · •̳) " + brightWhite

12
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
476
490
15
s
Apply
false
0
false
s"( ̳• · •̳) "

13
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
543
576
16
+
Apply
false
0
false
color + "/    づ♡" + Console.RESET

14
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
543
560
16
+
Apply
false
0
false
color + "/    づ♡"

15
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
563
576
16
RESET
Select
false
0
false
Console.RESET

16
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
664
709
18
s
Apply
false
0
false
s"$cardTop$eol$cardMiddle$eol$cardBottom$eol"

17
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
card
310
318
12
card
DefDef
false
0
false
def card

18
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
800
814
23
apply
Apply
false
0
false
List("S", "6")

19
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
800
804
23
List
Ident
false
0
false
List

20
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
857
871
24
apply
Apply
false
0
false
List("I", "9")

21
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
857
861
24
List
Ident
false
0
false
List

22
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1025
1064
28
+
Apply
false
0
false
hand.map(_ => "  +---+").mkString + eol

23
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1025
1049
28
map
Apply
false
0
false
hand.map(_ => "  +---+")

24
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1025
1058
28
mkString
Select
false
0
false
hand.map(_ => "  +---+").mkString

25
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1095
1142
29
+
Apply
false
0
false
hand.map(card => s"  | $card |").mkString + eol

26
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1095
1127
29
map
Apply
false
0
false
hand.map(card => s"  | $card |")

27
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
$anonfun
1112
1126
29
s
Apply
false
0
false
s"  | $card |"

28
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1095
1136
29
mkString
Select
false
0
false
hand.map(card => s"  | $card |").mkString

29
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1175
1214
30
+
Apply
false
0
false
hand.map(_ => "  +---+").mkString + eol

30
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1175
1199
30
map
Apply
false
0
false
hand.map(_ => "  +---+")

31
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1175
1208
30
mkString
Select
false
0
false
hand.map(_ => "  +---+").mkString

32
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1228
1278
31
print
Apply
false
0
false
print(topBorder + cardValues + bottomBorder + eol)

33
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1234
1277
31
+
Apply
false
0
false
topBorder + cardValues + bottomBorder + eol

34
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1234
1271
31
+
Apply
false
0
false
topBorder + cardValues + bottomBorder

35
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
1234
1256
31
+
Apply
false
0
false
topBorder + cardValues

36
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
printHand
952
965
27
printHand
DefDef
false
0
false
def printHand

37
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1301
1315
34
printHeading
Apply
false
0
false
printHeading()

38
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1327
1343
36
printHand
Apply
false
0
false
printHand(hand1)

39
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1366
1370
38
$lessinit$greater$default$1
Select
false
0
false
Grid

40
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1382
1402
39
println
Apply
false
0
false
println(grid.mesh())

41
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1390
1401
39
mesh
Apply
false
0
false
grid.mesh()

42
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1414
1430
41
printHand
Apply
false
0
false
printHand(hand2)

43
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1442
1472
43
println
Apply
false
0
false
println(card(Console.BLUE, 3))

44
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1450
1471
43
card
Apply
false
0
false
card(Console.BLUE, 3)

45
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1455
1467
43
BLUE
Select
false
0
false
Console.BLUE

46
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1482
1512
44
println
Apply
false
0
false
println(card(Console.RED, 10))

47
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1490
1511
44
card
Apply
false
0
false
card(Console.RED, 10)

48
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1495
1506
44
RED
Select
false
0
false
Console.RED

49
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1522
1553
45
println
Apply
false
0
false
println(card(Console.GREEN, 8))

50
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1530
1552
45
card
Apply
false
0
false
card(Console.GREEN, 8)

51
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1535
1548
45
GREEN
Select
false
0
false
Console.GREEN

52
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1563
1593
46
print
Apply
false
0
false
print(card(Console.YELLOW, 1))

53
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1569
1592
46
card
Apply
false
0
false
card(Console.YELLOW, 1)

54
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
1574
1588
46
YELLOW
Select
false
0
false
Console.YELLOW

55
src\\main\\scala\\KittyCardGame.scala
<empty>
KittyCardGame$
Object
<empty>.KittyCardGame$
main
51
59
5
main
DefDef
false
0
false
def main

56
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
toString
164
204
7
s
Apply
false
0
false
s"${value.toString} of ${suit.toString}"

57
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
toString
132
153
7
toString
DefDef
false
0
false
override def toString

58
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
<init>
93
107
6
generateDeck
Apply
false
0
false
generateDeck()

59
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
generateDeck
207
314
10
flatMap
Apply
false
0
false
for {\r\n      suit <- Suit.values.toList\r\n      value <- Value1.values.toList\r\n    } yield Card(suit, value)

60
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
generateDeck
228
239
11
values
Select
false
0
false
Suit.values

61
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
generateDeck
228
246
11
toList
Select
false
0
false
Suit.values.toList

62
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
$anonfun
254
314
12
map
Apply
false
0
false
value <- Value1.values.toList\r\n    } yield Card(suit, value)

63
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
$anonfun
263
276
12
values
Select
false
0
false
Value1.values

64
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
$anonfun
263
283
12
toList
Select
false
0
false
Value1.values.toList

65
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
generateDeck
159
183
9
generateDeck
DefDef
false
0
false
private def generateDeck

66
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
drawCard
409
423
18
nonEmpty
Select
false
0
false
cards.nonEmpty

67
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
drawCard
445
455
19
head
Select
false
0
false
cards.head

68
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
drawCard
471
481
20
tail
Select
false
0
false
cards.tail

69
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
drawCard
425
506
18
<none>
Block
true
0
false
{\r\n      val card = cards.head\r\n      cards = cards.tail\r\n      Some(card)\r\n    }

70
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
drawCard
512
532
22
<none>
Block
true
0
false
{\r\n      None\r\n    }

71
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
drawCard
367
379
17
drawCard
DefDef
false
0
false
def drawCard

72
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
refill
611
625
29
generateDeck
Apply
false
0
false
generateDeck()

73
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
refill
631
652
30
shuffle
Apply
false
0
false
Random.shuffle(cards)

74
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
refill
575
585
28
refill
DefDef
false
0
false
def refill

75
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
size
748
758
34
size
Select
false
0
false
cards.size

76
src\\main\\scala\\model\\Deck.scala
model
Deck
Class
model.Deck
size
732
740
34
size
DefDef
false
0
false
def size

77
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
<init>
119
146
7
apply
Apply
false
0
false
sys.props("line.separator")

78
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
<init>
119
128
7
props
Select
false
0
false
sys.props

79
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
<init>
302
330
10
fill
Apply
false
0
false
Array.fill(size, size)(None)

80
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
isWithinBounds
409
435
13
isWithinBounds
DefDef
false
0
false
private def isWithinBounds

81
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
662
682
19
isWithinBounds
Apply
false
0
false
isWithinBounds(x, y)

82
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
686
696
19
apply
Apply
false
0
false
grid(x)(y)

83
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
686
693
19
apply
Apply
false
0
false
grid(x)

84
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
686
704
19
isEmpty
Select
false
0
false
grid(x)(y).isEmpty

85
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
721
744
20
update
Apply
false
0
false
grid(x)(y) = Some(card)

86
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
721
728
20
apply
Apply
false
0
false
grid(x)

87
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
706
773
19
<none>
Block
true
0
false
{\r\n            grid(x)(y) = Some(card)\r\n            true\r\n        }

88
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
779
880
22
<none>
Block
true
0
false
{\r\n            false  // Return false if the position is out of bounds or already occupied\r\n        }

89
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
placeCard
572
585
18
placeCard
DefDef
false
0
false
def placeCard

90
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1027
1037
29
apply
Apply
false
0
false
grid(x)(y)

91
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1027
1034
29
apply
Apply
false
0
false
grid(x)

92
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1151
1175
32
toInt
Apply
false
0
false
Value1.toInt(card.value)

93
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1128
1239
31
<none>
Block
true
0
false
{\r\n                    Value1.toInt(card.value) * 2  // Double the value if the suit matches\r\n                }

94
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1302
1326
34
toInt
Apply
false
0
false
Value1.toInt(card.value)

95
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1279
1395
33
<none>
Block
true
0
false
{\r\n                    Value1.toInt(card.value)  // Keep the value if placed on a white rectangle\r\n                }

96
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1401
1484
35
<none>
Block
true
0
false
{\r\n                    0  // No points if the suit doesn't match\r\n                }

97
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1245
1484
33
<none>
If
true
0
false
if (rectangleColor == Suit.White) {\r\n                    Value1.toInt(card.value)  // Keep the value if placed on a white rectangle\r\n                } else {\r\n                    0  // No points if the suit doesn't match\r\n                }

98
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1075
1484
30
<none>
Block
true
0
false
=>\r\n                if (card.suit == rectangleColor) {\r\n                    Value1.toInt(card.value) * 2  // Double the value if the suit matches\r\n                } else if (rectangleColor == Suit.White) {\r\n                    Value1.toInt(card.value)  // Keep the value if placed on a white rectangle\r\n                } else {\r\n                    0  // No points if the suit doesn't match\r\n                }

99
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
1508
1512
38
<none>
Block
true
0
false
=> 0

100
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
calculatePoints
951
970
28
calculatePoints
DefDef
false
0
false
def calculatePoints

101
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
display
1634
1840
44
foreach
Apply
false
0
false
for (row <- grid) {\r\n            println(row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }.mkString(" | "))\r\n        }

102
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
display
1646
1650
44
refArrayOps
Apply
false
0
false
grid

103
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1667
1829
45
println
Apply
false
0
false
println(row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }.mkString(" | "))

104
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1675
1828
48
mkString
Apply
false
0
false
row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }.mkString(" | ")

105
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1675
1812
45
wrapRefArray
Apply
false
0
false
row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }

106
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1675
1812
45
map
Apply
false
0
false
row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }

107
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1675
1678
45
refArrayOps
Apply
false
0
false
row

108
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1721
1753
46
s
Apply
false
0
false
s"${card.value} of ${card.suit}"

109
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1718
1753
46
<none>
Block
true
0
false
=> s"${card.value} of ${card.suit}"

110
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1787
1797
47
<none>
Block
true
0
false
=> "Empty"

111
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
display
1601
1612
43
display
DefDef
false
0
false
def display

112
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
mesh
1948
2157
59
mkString
Apply
false
0
false
grid.map { row =>\r\n            row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }.mkString(" | ")\r\n        }.mkString(eol)

113
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
mesh
1948
2143
54
wrapRefArray
Apply
false
0
false
grid.map { row =>\r\n            row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }.mkString(" | ")\r\n        }

114
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
mesh
1948
2143
54
map
Apply
false
0
false
grid.map { row =>\r\n            row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }.mkString(" | ")\r\n        }

115
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
mesh
1948
1952
54
refArrayOps
Apply
false
0
false
grid

116
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1979
2132
58
mkString
Apply
false
0
false
row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }.mkString(" | ")

117
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1979
2116
55
wrapRefArray
Apply
false
0
false
row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }

118
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1979
2116
55
map
Apply
false
0
false
row.map {\r\n                case Some(card) => s"${card.value} of ${card.suit}"\r\n                case None       => "Empty"\r\n            }

119
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
1979
1982
55
refArrayOps
Apply
false
0
false
row

120
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
2025
2057
56
s
Apply
false
0
false
s"${card.value} of ${card.suit}"

121
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
2022
2057
56
<none>
Block
true
0
false
=> s"${card.value} of ${card.suit}"

122
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
$anonfun
2091
2101
57
<none>
Block
true
0
false
=> "Empty"

123
src\\main\\scala\\model\\Grid.scala
model
Grid
Class
model.Grid
mesh
1916
1924
53
mesh
DefDef
false
0
false
def mesh

124
src\\main\\scala\\model\\Grid.scala
model
Grid$
Object
model.Grid$
$lessinit$greater$default$1
91
91
6
$lessinit$greater$default$1
DefDef
false
0
false


125
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
toString
56
77
4
toString
DefDef
false
0
false
override def toString

126
src\\main\\scala\\model\\Suit.scala
model
Suit$
Object
model.Suit$
<init>
160
165
6
Value
Ident
false
0
false
Value

127
src\\main\\scala\\model\\Suit.scala
model
Suit$
Object
model.Suit$
<init>
160
165
6
Value
Ident
false
0
false
Value

128
src\\main\\scala\\model\\Suit.scala
model
Suit$
Object
model.Suit$
<init>
160
165
6
Value
Ident
false
0
false
Value

129
src\\main\\scala\\model\\Suit.scala
model
Suit$
Object
model.Suit$
<init>
160
165
6
Value
Ident
false
0
false
Value

130
src\\main\\scala\\model\\Suit.scala
model
Suit$
Object
model.Suit$
<init>
160
165
6
Value
Ident
false
0
false
Value

131
src\\main\\scala\\model\\Suit.scala
model
Suit$
Object
model.Suit$
<init>
160
165
6
Value
Ident
false
0
false
Value

132
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
<init>
89
97
5
Value
Apply
false
0
false
Value(1)

133
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
<init>
111
119
6
Value
Apply
false
0
false
Value(2)

134
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
<init>
135
143
7
Value
Apply
false
0
false
Value(3)

135
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
<init>
158
166
8
Value
Apply
false
0
false
Value(4)

136
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
<init>
181
189
9
Value
Apply
false
0
false
Value(5)

137
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
<init>
203
211
10
Value
Apply
false
0
false
Value(6)

138
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
<init>
227
235
11
Value
Apply
false
0
false
Value(7)

139
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
<init>
251
259
12
Value
Apply
false
0
false
Value(8)

140
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
395
399
16
<none>
Block
true
0
false
=> 1

141
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
416
420
17
<none>
Block
true
0
false
=> 2

142
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
437
441
18
<none>
Block
true
0
false
=> 3

143
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
458
462
19
<none>
Block
true
0
false
=> 4

144
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
479
483
20
<none>
Block
true
0
false
=> 5

145
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
500
504
21
<none>
Block
true
0
false
=> 6

146
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
521
525
22
<none>
Block
true
0
false
=> 7

147
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
542
546
23
<none>
Block
true
0
false
=> 8

148
src\\main\\scala\\model\\Value1.scala
model
Value1$
Object
model.Value1$
toInt
334
343
15
toInt
DefDef
false
0
false
def toInt

